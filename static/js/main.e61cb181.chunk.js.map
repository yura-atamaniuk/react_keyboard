{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyUp","event","code","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAaEC,YAAc,SAACC,GACb,MAAsB,UAAfA,EAAMC,KACT,EAAKC,SAAS,CAAEJ,WAAY,UAC5B,EAAKI,SAAS,CAAEJ,WAAYE,EAAMG,OAhB1C,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKP,eAN5C,kCASE,WACEK,SAASG,oBAAoB,QAASD,KAAKP,eAV/C,oBAmBE,WACE,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKT,MAAMC,WAAX,mCAC+BQ,KAAKT,MAAMC,WAD1C,KAEG,kCAzBd,GAAyBW,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.e61cb181.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    return event.code === 'Space'\n      ? this.setState({ pressedKey: 'SPACE' })\n      : this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.pressedKey\n            ? `The last pressed key is [${this.state.pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}